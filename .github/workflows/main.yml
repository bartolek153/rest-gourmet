name: build and publish app to azure

env:
  AZURE_WEBAPP_PACKAGE_PATH: "."
  DOTNET_VERSION: "8.0.x"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"

jobs:
  dotnet:
    name: Build .NET bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Publish with dotnet
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "${{env.DOTNET_ROOT}}/myapp/appsettings.json"
        env:
          ConnectionStrings.DefaultConnection: ${{ secrets.MSSQL_CONNECTION_STRING }}
          EmailSettings.UsernameEmail: ${{ secrets.GMAIL_IMAP_USER_EMAIL }}
          EmailSettings.UsernamePassword: ${{ secrets.GMAIL_IMAP_USER_PWD }}
          TelegramSettings.Token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TelegramSettings.AdminChatId: ${{ secrets.TELEGRAM_ADMIN_CHATID }}
          WhatsappSettings.AccessToken: ${{ secrets.WHATSAPP_TOKEN }}
          WhatsappSettings.PhoneNumberId: ${{ secrets.WHATSAPP_PHONE_NUMBER }}
          WhatsappSettings.BusinessAccountId: ${{ secrets.WHATSAPP_ACCOUNT }}
          WhatsappSettings.BusinessId: ${{ secrets.WHATSAPP_BUSINESS_ID }}
          WhatsappSettings.AdminPhoneNumber: ${{ secrets.WHATSAPP_ADMIN_PHONE_NUMBER }}
          JwtSettings.Secret: ${{ secrets.JWT_SECRET }}
          JwtSettings.Issuer: ${{ secrets.JWT_ISSUER }}
          JwtSettings.Audience: ${{ secrets.JWT_AUDIENCE }}
          JwtSettings.ExpiryInMinutes: ${{ secrets.JWT_EXPIRY_MINUTES }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy-dotnet:
    name: Deploy .NET to Azure
    runs-on: ubuntu-latest
    needs: dotnet
    environment:
      name: "production"
      url: ${{ steps.dotnet-webapp-deploy.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: dotnet-webapp-deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_API_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_API_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  ts:
    name: Build TS bundle
    runs-on: ubuntu-latest
    env:
      VITE_API_URL: ${{ secrets.AZURE_API_WEBAPP_URL }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        name: Setup TS
        with:
          node-version: "18.x"

      - name: Install dependencies, build, and test
        run: |
          cd UI
          yarn install
          yarn vite build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: UI/dist

  deploy-ts:
    name: Deploy UI app to Azure
    runs-on: ubuntu-latest
    needs: ts
    environment:
      name: "Production"
      url: ${{ steps.ts-webapp-deploy.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        id: ts-webapp-deploy
        with:
          app-name: ${{ secrets.AZURE_WEBUI_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBUI_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
